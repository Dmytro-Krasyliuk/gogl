// ******** –†–æ–∑—Å–∏–ª–∫–∞ –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è –æ 10:00
// const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));
// cron.schedule("0 10 * * *", async function () {
//   const users = await User.find({});

//   for (let i = 0; i < users.length; i++) {
//     bot.sendMessage(users[i].idGroup, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–¥–µ—Å—å");
//     await delay(2000); // –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π
//   }
// });

// ******** –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–µ –ø–æ–ª–µ
// let a = await User.updateMany(
//   {}, // –£—Å–ª–æ–≤–∏–µ –≤—ã–±–æ—Ä–∞ (–ø—É—Å—Ç–æ–µ –æ–∑–Ω–∞—á–∞–µ—Ç –≤—ã–±–æ—Ä –≤—Å–µ—Ö)
//   { $set: { diamonds: 0 } }
// );
// console.log(a);

// ******** Chat GPT
// // –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à API-–∫–ª—é—á –∑–¥–µ—Å—å
// const API_KEY = "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";

// const headers = {
//   "Content-Type": "application/json",
//   Authorization: `Bearer ${API_KEY}`,
// };

// const prompt = "–ö–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å?";
// const maxTokens = 150;

// const data = {
//   prompt: prompt,
//   max_tokens: maxTokens,
// };

// let client = axios.create({
//   headers: {
//     Authorization: 'Bearer ' + API_KEY
//   }
// })

// let params = {
//   prompt: '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É –≤ html?',
//   model: 'text-davinci-003',
//   max_tokens: 1000,
//   temperature: 0.7,
// }

// client
//   .post("https://api.openai.com/v1/completions", params)
//   .then((result) => {
//     console.log(result.data.choices[0].text);
//   })
//   .catch((err) => {
//     console.log("error", err);
//   });

// ******** –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è

// app.post("/process-image", async (req, res) => {
//   try {
//     const { imageUrl } = req.body;

//     const response = await fetch(imageUrl);
//     const buffer = await response.buffer();

//     const decodedImage = tf.node.decodeImage(buffer);
//     const model = await load();
//     const predictions = await model.detect(decodedImage);
//     decodedImage.dispose();

//     res.json(predictions);
//   } catch (error) {
//     console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", error);
//     res.status(500).json({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è" });
//   }
// });

// ***** –ï—Ñ–µ–∫—Ç –¥—Ä—É–∫—É
//    // Send the initial message
//    const message = await bot.sendMessage(chatId, "–ü");

//    // Get the message ID for future editing
//    const messageId = message.message_id;

//    // Simulate a typing effect
//    let text1 = "–ü";
//    const fullText = `–ü—Ä–∏–≤—ñ—Ç, dimanice! ü•≥
// –ú–∏ –ø–æ—á–∏–Ω–∞—î–º–æ –Ω–∞—à—ñ –∑–∞–Ω—è—Ç—Ç—è –ø–æ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—é!
// –û—Å—å —É—Å—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è, —è–∫–∞ —Å—Ç–æ—Å—É—î—Ç—å—Å—è –Ω–∞—à–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è:
// üîê –ü–æ—Å—Ç—ñ–π–Ω—ñ –¥–æ—Å—Ç—É–ø–∏ –¥–æ –∑–∞–Ω—è—Ç—å:`;

//     for (let i = 1; i < fullText.length; i++) {
//       try{
//       if (
//         (fullText[i] === " " || fullText[i] === "\n") &&
//         i + 1 < fullText.length
//       ) {
//         text1 += fullText[i] + fullText[i + 1];
//         i++; // Skip the next character since we've already added it
//       } else {
//         text1 += fullText[i];
//       }

//       await bot.editMessageText(text1, {
//         chat_id: chatId,
//         message_id: messageId,
//       });
//       await new Promise((resolve) => setTimeout(resolve, 150)); // –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 200 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥
//     } catch(e) {}

//     }

// let ddata = [
//   {
//     id: uuid(),
//     title: "–û–±–µ—Ä—ñ—Ç—å —Ç–µ —â–æ –º–æ–∂–Ω–∞ –Ω–∞–ø–∏—Å–∞—Ç–∏ –≤ —Ç–µ–≥ address",
//     description: "description 1",
//     options: [
//       "+38 050 014 15",
//       "–Ω–æ—É—Ç–±—É–∫ Lenovo",
//       "–ó–∞–º–æ–≤–∏—Ç–∏",
//       "–±—É–¥—å-—è–∫–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è",
//     ],
//   },
//   {
//     id: uuid(),
//     title: "–û–±–µ—Ä—ñ—Ç—å —Ç–µ —â–æ –º–æ–∂–Ω–∞ –Ω–∞–ø–∏—Å–∞—Ç–∏ –≤ —Ç–µ–≥ address 2",
//     description: "description 2",
//     options: [
//       "+38 050 014 15 2",
//       "–Ω–æ—É—Ç–±—É–∫ Lenovo 2",
//       "–ó–∞–º–æ–≤–∏—Ç–∏ 2",
//       "–±—É–¥—å-—è–∫–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è 2",
//     ],
//   },
// ];

// bot.sendMessage(
//   chatId,
//   "click me 2",
//   keyboards.openApp("https://codepen.io/DimaNice/full/OJBodYj")
// );

// await studentListPractice.deleteMany({});
